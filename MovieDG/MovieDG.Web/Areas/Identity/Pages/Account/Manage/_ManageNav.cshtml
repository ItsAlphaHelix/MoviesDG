@using MovieDG.Data.Data.Models
@inject SignInManager<ApplicationUser> SignInManager

@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<div class="navbar-wrap main-menu d-none d-lg-flex">
    <ul class="navigation">
        <li><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
        <li><a class="@ManageNavPages.IndexNavClass(ViewContext)" asp-page="./Index">Change Profile</a></li>
        <li><a class="@ManageNavPages.EmailNavClass(ViewContext)" asp-page="./Email">Change Email</a></li>
        <li><a class="@ManageNavPages.ChangePasswordNavClass(ViewContext)" asp-page="./ChangePassword">Change Password</a></li>
        @if (hasExternalLogins)
        {
            <li><a class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
        }
        <li><a class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" asp-page="./TwoFactorAuthentication">Better security</a></li>
        <li><a class="@ManageNavPages.PersonalDataNavClass(ViewContext)" asp-page="./PersonalData">Personal data</a></li>
    </ul>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        let currentUrl = window.location.href;
        const liElements = document.querySelectorAll('.navigation>li');
        const activeLiElement = document.querySelector('.navigation > li.active')
        let action = currentUrl.split('/');
        action = action[action.length - 1];
        const identityManageUrlMapping = {
            "Manage": 1,
            "Email": 2,
            "ChangePassword": 3,
            "TwoFactorAuthentication": 4,
            "PersonalData": 5
        };

        for (const [keyword, index] of Object.entries(identityManageUrlMapping)) {
            if (action === keyword) {
                if (activeLiElement) {
                    activeLiElement.classList.remove('active');
                }
                liElements[index].classList.add('active');
                break;
            }
        }
    });
</script>