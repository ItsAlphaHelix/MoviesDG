@using MovieDG.Core.ViewModels.Movies
@model IEnumerable<MovieViewModel>

@{
    this.ViewData["Title"] = "Recent Movies";
}

<section id="movies-list" class="top-rated-movie tr-movie-bg" data-background="/images/tr_movies_bg.jpg">
    @await Html.PartialAsync("_MoviesPartial", Model)
</section>

@section scripts{
    <script>
            $('#load-button').click(function () {

            $('#load-button').prop('disabled', true);
                var nextPageNumber = $(this).data('pageNumber');

                $.get('/Movies/RecentMovies', {pageNumber: nextPageNumber },)
                    .done(function (data) {

                        $('#tr-button').append(data);
                        $('#tr-button').append($('#load-button'))
                        $('#load-button').data('pageNumber', nextPageNumber + 1);

                        if ($.trim(data).length === 0) {
                        $('#load-button').prop('disabled', true);
                        } else {
                        $('#load-button').prop('disabled', false);
                        }

                        // $.getScript('/js/main.js');
                    })
                    .fail(function (xhr, status, error) {
                        console.log('An error occurred while loading the next page of movies: ' + error);
                    });
            });
    </script>
    <script>
            $('.tr-movie-menu-active button').click(function () {
                var filterType = $(this).data('filter');
                $.ajax({
                    url: '@Url.Action("Filter")',
                    type: 'GET',
                    data: { filterType: filterType },
                    success: function (data) {
                        $('#movies-list').html(data);
                    let buttons = document.querySelectorAll('button');
                        if (filterType == "top-rated") {
                            $(buttons[2]).addClass('active');
                            filterType = "TopRatedMovies";
                        } else if (filterType == "recent") {
                            $(buttons[4]).addClass('active');
                            filterType = "RecentMovies";

                        } else if (filterType = "popularity") {
                            $(buttons[3]).addClass('active');
                            filterType = "PopularityMovies";
                        }

                        window.history.pushState(null, null, filterType);
                        // $.getScript('/js/main.js');
                    },
                    error: function () {
                        alert('An error occurred.');
                    }
                });
                // $('.filter-buttons button').removeClass('active');
                
                return false;
            });
    </script>
}