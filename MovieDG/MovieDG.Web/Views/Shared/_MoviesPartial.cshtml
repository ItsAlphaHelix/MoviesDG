@using Microsoft.AspNetCore.Identity
@using MovieDG.Core.Contracts
@using MovieDG.Core.ViewModels.Movies
@using MovieDG.Data.Data.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject IMovieService moviesService;

@model IEnumerable<MovieViewModel>
@{
    var indexOfWordMovieMovies = ViewData["Title"].ToString().IndexOf("M");
    string wordMovie = ViewData["Title"].ToString().Substring(indexOfWordMovieMovies);
    string firstWord = ViewData["Title"].ToString().Substring(0, indexOfWordMovieMovies);

    //var hasMovies = await this.moviesService.IsDatabaseHasMoviesAsync();
}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="section-title text-center mb-50">
                <h2 class="title"><span>@firstWord</span>@wordMovie</h2>
            </div>
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="tr-movie-menu-active text-center">
                <button class=".top-rating" name="Top Rated Movies" data-filter="top-rated">Top Rating</button>
                <button class=".popularity" name="Popularity Movies" data-filter="popularity">Popularity</button>
                <button class=".recent" name="Recent Movies" data-filter="recent">Recent</button>
            </div>
        </div>
    </div>
    <div id="list-of-movies" class="row movie-item-row">
        @foreach (var movie in Model)
        {
            <div id="movie" class="custom-col- grid-item grid-sizer">
                <div class="movie-item movie-item-two">
                    <div class="movie-poster">
                        <img src="@movie.Poster" alt="">
                        <ul class="overlay-btn">
                            <li>
                                @if (this.User?.Identity?.IsAuthenticated == true)
                                {
                                    <a href="https://www.youtube.com/watch?v=@movie.Trailer" class="popup-video btn">Watch Now</a>
                                }
                                else
                                {
                                    <a asp-area="Identity" asp-page="/Account/Login" class="btn">Watch Now</a>
                                }
                            </li>
                            <li><a asp-action="Details" asp-route-id="@movie.Id" class="btn">Details</a></li>
                        </ul>
                    </div>
                    <div class="movie-content">
                        @if (movie.Title.Length > 21)
                        {
                            string word = movie.Title.Substring(0, 18);
                            string title = word + " ...";
                            <h5 class="title"><a asp-action="Details" asp-route-id="@movie.Id">@title</a></h5>
                        }
                        else
                        {
                            <h5 class="title"><a asp-action="Details" asp-route-id="@movie.Id">@movie.Title</a></h5>
                        }
                        <div class="movie-content-bottom">
                            <ul>
                                <li class="tag">
                                    <a href="#">HD</a>
                                </li>
                                <li>
                                    <span class="like"><i class="fas fa-thumbs-up"></i> @movie.AverageVotes.ToString("F1")</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div id="tr-button" class="tr-movie-btn text-center mt-25">
    <button id="load-button" class="btn" data-page-number="2">LOAD MORE</button>
    <div id="spinner" style="display: none"></div>
</div>



<script>
    $('#load-button').click(function () {
        let $button = $('#load-button');
        let $spinner = $('#spinner');

        // Disable the button and show the spinner
        $button.hide();
        $spinner.show();

        let nextPageNumber = $button.data('pageNumber');
        let currentUrl = window.location.href;
        let filterType = "";
        let totalPages = '@ViewBag.TotalPages';

        if (currentUrl.includes('TopRatedMovies')) {
            filterType = "top-rated";
        } else if (currentUrl.includes('PopularityMovies')) {
            filterType = "popularity";
        } else if (currentUrl.includes('RecentMovies')) {
            filterType = "recent";
        }

        setTimeout(function () {
            $.get('/Movies/LoadMore', { filterType: filterType, pageNumber: nextPageNumber })
                .done(function (data) {
                    // Append the new content but leave the button and spinner in their original position
                    $.getScript('/js/main.js');
                    $('#movies-list .container').append(data);
                    // Update button state and hide spinner
                    // Check if there are more pages to load
                    if (nextPageNumber === parseInt(totalPages)) {
                        $button.hide();  // Hide the button if we're on the last page
                    } else {
                        $button.data('pageNumber', nextPageNumber + 1).show();
                    }

                    $spinner.hide();

                    // // Disable the button if no more data
                    // if ($.trim(data).length === 0) {
                    //     $button.prop('disabled', true);
                    // }

                })
                .fail(function (xhr, status, error) {
                    console.log('An error occurred while loading the next page of movies: ' + error);

                    // Show button and hide spinner on error
                    $button.show();
                    $spinner.hide();
                });
        }, 1000);
    });
</script>

<script>  
        $('.tr-movie-menu-active button').click(function () {
            var filterType = $(this).data('filter');
            $.ajax({
                url: '@Url.Action("Filter")',
                type: 'GET',
                data: { filterType: filterType },
                success: function (data) {

                $('#movies-list').html(data);
                let element = document.querySelector('.tr-movie-menu-active').children;
                let topRatingButton = element.item(0);
                let popularityButton = element.item(1);
                let recentButton = element.item(2);
                if (filterType == "top-rated") {
                    topRatingButton.classList.add('active');
                    filterType = "TopRatedMovies";
                } else if (filterType == "recent") {
                    recentButton.classList.add('active');
                    filterType = "RecentMovies";

                } else if (filterType = "popularity") {
                    popularityButton.classList.add('active');
                    filterType = "PopularityMovies";
                }

                    window.history.pushState(null, null, filterType);

                    if (filterType == "TopRatedMovies") {
                        filterType = "Top Rated Movies"
                    } else if (filterType == "RecentMovies") {
                        filterType = "Recent Movies"
                    } else if (filterType == "PopularityMovies") {
                        filterType = "Popularity Movies"
                    }
                    document.title = filterType + " - MoviesDG";
                },
                error: function () {
                    alert('An error occurred.');
                }
            });
        });
</script>