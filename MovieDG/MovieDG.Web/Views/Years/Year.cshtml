@using MovieDG.Core.ViewModels.Movies
@model IEnumerable<MovieViewModel>

@{
    this.ViewData["Title"] = "Years";
    var year = this.Context.Request.Query["year"];
}

<section class="top-rated-movie tr-movie-bg" data-background="/images/tr_movies_bg.jpg">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="section-title text-center mb-50">
                    <h2>
                        All Movies Released In &nbsp;<span>@year</span>
                    </h2>
                </div>
            </div>
        </div>
        @await Html.PartialAsync("_LoadMoreMovies", Model)
    </div>

    <div id="tr-button" class="tr-movie-btn text-center mt-25">
        <button id="load-button" class="btn" data-page-number="2">LOAD MORE</button>
    </div>
</section>

@section scripts{
    <script>
        $(document).ready(function () {
            $('#load-button').click(function () {
                var nextPageNumber = $(this).data('pageNumber');
                var currentUrl = window.location.href;
                var year = currentUrl.split('=')[1];

                $.get('/Years/Year', { year: year, pageNumber: nextPageNumber },)
                    .done(function (data) {

                        $('#tr-button').append(data);
                        $('#tr-button').append($('#load-button'))
                        $('#load-button').data('pageNumber', nextPageNumber + 1);
                        $.getScript('/js/main.js');
                    })
                    .fail(function (xhr, status, error) {
                        console.log('An error occurred while loading the next page of movies: ' + error);
                    });
            });
        });
    </script>
}
